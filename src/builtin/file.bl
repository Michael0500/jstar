class FileNotFoundException : Exception {}

var SEEK_SET = 0
var SEEK_CUR = 1
var SEEK_END = 2

class File {
	def new(name, mode) {
		if(!(name is String and mode is String)) {
			raise InvalidArgException("Arguments of File.new() must be 2 strings.")
		}
		this._handle = __open(name, mode)
		this._closed = false
	}

	def __iterator__() {
		return __FileIterator(this)
	}

	native tell()
	native seek(off, whence=0)
	native rewind()

	native size()
	native readAll()
	native readLine()
	native close()

	def __string__() {
		return "<" + ("closed " if this._closed else "open ") + super.__string__() + ">"
	}
}

class __FileIterator {
	def new(file) {
		this.file = file
	}

	def hasNext() {
		this.line = this.file.readLine()
		return this.line != "" and this.line != null
	}

	def next() {
		return this.line
	}
}

native __open(name, mode)
