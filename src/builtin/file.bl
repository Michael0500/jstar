class FileNotFoundException : Exception {
	def new(err) {
		this.err = err;
	}
}

class File {
	def new(name, mode) {
		typeassert(name, String, "Argument 1");
		typeassert(mode, String, "Argument 2");

		var handle = __open(name, mode);
		if(handle == null) {
			raise FileNotFoundException("Couldn't find file " + name);
		}

		this.__handle = handle;
	}

	def __iterator__() {
		return __FileIterator(this);
	}

	native size();
	native readAll();
	native readLine();
	native close();
}

class __FileIterator {
	def new(file) {
		this.file = file;
	}

	def hasNext() {
		this.line = this.file.readLine();
		return this.line != "";
	}

	def next() {
		return this.line;
	}
}

native __open(name, mode);
