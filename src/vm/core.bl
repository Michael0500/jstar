class Number   {}
class Boolean  {}
class Function {}
class Module   {}

class String {
	native length();

	def toString() {
		return this;
	}
}

class List {
	native append(e);
	native insert(i, e);
	native remove(i);
	native length();


	def addAll(iterable) {
		for(var e in iterable) {
			this.add(e);
		}
	}

	def delete(e) {
		var i = this.indexOf(e);
		if(i >= 0) {
			this.remove(i);
			return true;
		}
		return false;
	}

	def deleteAll(e) {
		var ret = false;
		for(var i = 0; i < this.length(); i = i + 1) {
			if(this[i] == e) {
				this.remove(i);
				ret = true;
			}
		}
		return ret;
	}

	def contains(e) {
		return this.indexOf(e) != -1;
	}

	def indexOf(e) {
		for(var i = 0; i < this.length(); i = i + 1) {
			if(this[i] == e) {
				return i;
			}
		}
		return -1;
	}

	def indexOfLast(e) {
		var index = -1;
		for(var i = 0; i < this.length(); i = i + 1) {
			if(this[i] == e) {
				index = i;
			}
		}
		return i;
	}

	def join(sep) {
		var s = "";
		for(var i = 0; i < this.length(); i = i + 1) {
			var e = this[i];
			s = s + str(e);
			if(i != this.length() - 1) s = s + sep;
		}
		return s;
	}

	def iterator() {
		return ListIterator(this);
	}

	def toString() {
		return "[" + this.join(", ") + "]";
	}
}

class ListIterator {
	def new(list) {
		this.n = 0;
		this.list = list;
	}

	def hasNext() {
		return this.n < this.list.length();
	}

	def next() {
		var next = this.list[this.n];
		this.n = this.n + 1;
		return next;
	}
}

def str(o) {
	if(o is String) {
		return o;
	} else if(o is Object) {
		return o.toString();
	} else {
		return __str(o);
	}
}

native list(n, init);
native error(msg);
native isInt(n);
native __str(s);
