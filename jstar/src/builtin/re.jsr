class RegexException is Exception end

native match(str, regex, off=0)
native find(str, regex, off=0)
native gsub(str, regex, sub, num=0)
native gmatch(str, regex)

fun igmatch(str, regex)
    return _IGMatch(str, regex)
end

class _IGMatch
    fun new(s, r)
        this.s, this.r = s, r
        this.off, this.endl = 0, null
    end

    fun __iter__(_)
        var res = find(this.s, this.r, this.off)
        if !res then 
            return null
        end
        
        var b, e = res

        while e == this.endl and e - b == 0 do
            res = find(this.s, this.r, this.off += 1)
            if res then
                return null
            end
            b, e = res
        end

        this.off = this.endl = e

        var nres = #res
        if   nres == 2 then
            return this.s.slice(b, e)
        elif nres == 3 then
            return res[2]
        else
            return res.subTuple(2, nres)
        end
    end

    fun __next__(match)
        return match
    end
end